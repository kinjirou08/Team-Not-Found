server.port=8082
# if you want to use this instead, setup your Environment Variables
# To do it, right click the project (case-clothes) -> click "Run as" -> Run Configuration
# Along side the "Spring Boot", "Arguments", "JRE", "Classpath", "Source", you'll see a sign like ">>", click on it
# and then choose "Environment", then add variables
# for url, name it as db_url then the value will be jdbc:postgresql://db-case-clothes.cvxvufcauxjd.us-west-2.rds.amazonaws.com:5432/CaseClothes
# for username, name it as db_username, then the value will be postgres
# for password, name it as db_password, then the value will be p4ssw0rd
#pring.datasource.url=${db_url}
#pring.datasource.username=${db_username}
#pring.datasource.password=${db_password}

spring.datasource.url=jdbc:postgresql://db-case-clothes.cvxvufcauxjd.us-west-2.rds.amazonaws.com:5432/CaseClothes
spring.datasource.username=postgres
spring.datasource.password=p4ssw0rd

#spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
###//db-case-clothes.cvxvufcauxjd.us-west-2.rds.amazonaws.com:5432/CaseClothes
#spring.datasource.username=postgres
#spring.datasource.password=password

#We won't be using this mainly becuase we have our own Database Connection with it's own "public schema"
#spring.jpa.properties.hibernate.default_schema=springboot_demo

#spring.jpa.properties.hibernate.default_schema=public
#pring.jpa.properties.hibernate.default_schema=public
spring.jpa.properties.hibernate.default_schema=case_clothes
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#create, create-drop, validate, update
#Use create first, after all the tables are made, switch to validate
spring.jpa.hibernate.ddl-auto=validate

spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.batch_versioned_data=true

